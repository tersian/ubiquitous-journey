apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: helm-deploy-pipeline
  labels:
    rht-labs.com/uj: ubiquitous-journey
spec:
  workspaces:
    - name: shared-workspace
    - name: argocd-env-secret
  params:
  - name: APPLICATION_NAME
    type: string
    default: ""
  - name: GIT_SHORT_REVISION
    type: string
    default: ""
  - name: GIT_BRANCH
    type: string
    default: "master"
  - name: HELM_CHART_VERSION
    type: string
    default: ""
  - name: HELM_OVERWRITE_VALUES
    type: string
    default: "image_repository=image-registry.openshift-image-registry.svc:5000,image_version=$(params.GIT_SHORT_REVISION),image_namespace=$(params.DEV_NAMESPACE)"
  - name: BUILD_NAMESPACE
    type: string
    default: "labs-ci-cd"
  - name: DEV_NAMESPACE
    type: string
    default: "labs-dev"
  - name: TEST_NAMESPACE
    type: string
    default: "labs-test"
  tasks:
    - name: fetch-cicd-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "https://github.com/tersian/ubiquitous-journey.git"
        - name: revision
          value: "main"
        - name: subdirectory
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd"
        - name: deleteExisting
          value: "true"

    - name: helm-install-apps-branches # only deploy to dev
      when:
        - Input: "$(params.GIT_BRANCH)"
          Operator: notin
          Values: ["master","trunk","main"]
      taskRef:
        name: helm-install-from-chartrepo
      params:
        - name: helm_repo_name
          value: "nexus"
        - name: helm_repo_url
          value: "http://sonatype-nexus-service:8081/repository/helm-charts/"
        - name: chart_name
          value: "$(params.APPLICATION_NAME)"
        - name: release_name
          value: "$(params.GIT_BRANCH)"
        - name: release_version
          value: "$(params.HELM_CHART_VERSION)"
        - name: release_namespace
          value: "$(params.DEV_NAMESPACE)"
        - name: overwrite_values
          value: "$(params.HELM_OVERWRITE_VALUES)"
      runAfter:
        - fetch-cicd-repository

    - name: helm-argocd-apps-test
      when:
        - Input: "$(params.GIT_BRANCH)"
          Operator: in
          Values: ["master","trunk","main"]
      taskRef:
        name: helm-install-from-source
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: charts_dir
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd/applications/deployment"
        - name: values_file
          value: argo-app-of-apps-test.yaml
        - name: release_name
          value: "pet-battle-suite-test"
        - name: target_namespace
          value: "$(params.BUILD_NAMESPACE)"
        - name: overwrite_values
          value: "foo=bar"
      runAfter:
        - fetch-cicd-repository

    - name: argocd-sync-application-test
      retries: 3
      taskRef:
        name: argocd-sync-and-wait
      workspaces:
      - name: argocd-env-secret
        workspace: argocd-env-secret
      params:
      - name: application-name
        value: "-l app.kubernetes.io/instance=$(params.APPLICATION_NAME)"
      - name: argocd-project
        value: "pet-battle-test"
      - name: flags
        value: --insecure
      - name: revision
        value: "$(params.HELM_CHART_VERSION)"
      runAfter:
      - helm-argocd-apps-test

    - name: helm-argocd-apps-stage
      when:
        - Input: "$(params.GIT_BRANCH)"
          Operator: in
          Values: ["master","trunk","main"]
      taskRef:
        name: helm-install-from-source
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: charts_dir
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd/applications/deployment"
        - name: values_file
          value: argo-app-of-apps-stage.yaml
        - name: release_name
          value: "pet-battle-suite-stage"
        - name: target_namespace
          value: "$(params.BUILD_NAMESPACE)"
        - name: overwrite_values
          value: "foo=bar"
      runAfter:
        - fetch-cicd-repository

    - name: argocd-sync-application-stage
      retries: 3
      taskRef:
        name: argocd-sync-and-wait
      workspaces:
      - name: argocd-env-secret
        workspace: argocd-env-secret
      params:
      - name: application-name
        value: "-l app.kubernetes.io/instance=$(params.APPLICATION_NAME)" 
      - name: argocd-project
        value: "pet-battle-stage"
      - name: flags
        value: --insecure
      - name: revision
        value: "$(params.HELM_CHART_VERSION)"
      runAfter:
      - helm-argocd-apps-stage
