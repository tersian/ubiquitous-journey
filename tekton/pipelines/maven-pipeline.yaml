apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: maven-pipeline
  labels:
    rht-labs.com/uj: ubiquitous-journey
spec:
  workspaces:
    - name: shared-workspace
    - name: maven-settings
    - name: argocd-env-secret
    - name: maven-m2
    - name: git-auth-secret
  params:
  - name: APPLICATION_NAME
    type: string
    default: ""
  - name: GIT_URL
    type: string
    default: ""
  - name: GIT_REVISION
    type: string
    default: "master"
  - name: GIT_REF
    type: string
    default: "refs/heads/master"
  - name: GIT_SHORT_REVISION
    type: string
    default: ""
  - name: GIT_BRANCH
    type: string
    default: "master"
  - name: HELM_CHART_VERSION
    type: string
    default: ""
  - name: HELM_OVERWRITE_VALUES
    type: string
    default: "image_repository=image-registry.openshift-image-registry.svc:5000,image_version=$(params.GIT_SHORT_REVISION),image_namespace=$(params.DEV_NAMESPACE)"
  - name: MAVEN_MIRROR_URL
    type: string
    default: "http://repo1.maven.org/maven2"
  - name: MAVEN_OPTS
    type: string
    default: ""
  - name: MAVEN_BUILD_OPTS
    description: maven build options
    type: array
    default: []
  - name: BUILD_NAMESPACE
    type: string
    default: "labs-ci-cd"
  - name: DEV_NAMESPACE
    type: string
    default: "labs-dev"
  - name: TEST_NAMESPACE
    type: string
    default: "labs-test"
  - name: STAGE_NAMESPACE
    type: string
    default: "labs-staging"
  - name: APP_OF_APPS_DEV_KEY
    type: string
    default: ""
  - name: APP_OF_APPS_TEST_KEY
    type: string
    default: ""
  - name: APP_OF_APPS_STAGE_KEY
    type: string
    default: ""
  tasks:
    - name: fetch-app-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "$(params.GIT_URL)"
        - name: revision
          value: "$(params.GIT_REVISION)"
        - name: refspec
          value: "$(params.GIT_REF)"
        - name: subdirectory
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: deleteExisting
          value: "true"

    - name: fetch-cicd-repository
      taskRef:
        name: git-clone
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: url
          value: "https://github.com/tersian/ubiquitous-journey.git"
        - name: revision
          value: "main"
        - name: subdirectory
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd"
        - name: deleteExisting
          value: "true"
      runAfter:
        - fetch-app-repository

    - name: code-analysis
      taskRef:
        name: maven
      params:
        - name: MAVEN_MIRROR_URL
          value: "$(params.MAVEN_MIRROR_URL)"
        - name: MAVEN_OPTS
          value: "$(params.MAVEN_OPTS)"
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: GOALS
          value:
            - install
            - org.owasp:dependency-check-maven:check
            - sonar:sonar
        - name: MAVEN_BUILD_OPTS
          value:
            - '-Dsonar.host.url=http://sonarqube-sonarqube:9000'
            - '-Dsonar.userHome=/tmp/sonar'
            - '-Dsonar.login=admin'
            - '-Dsonar.password=admin123'
      runAfter:
        - fetch-cicd-repository
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: maven-m2
          workspace: maven-m2
        - name: output
          workspace: shared-workspace

    - name: save-test-results
      taskRef:
        name: allure-post-report
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
      runAfter:
        - code-analysis
      workspaces:
        - name: output
          workspace: shared-workspace

    - name: quality-gate-check
      retries: 1
      taskRef:
        name: sonarqube-quality-gate-check
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
      - name: WORK_DIRECTORY
        value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
      runAfter:
      - save-test-results

    - name: maven-run
      taskRef:
        name: maven
      params:
        - name: MAVEN_MIRROR_URL
          value: "$(params.MAVEN_MIRROR_URL)"
        - name: MAVEN_OPTS
          value: "$(params.MAVEN_OPTS)"
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: GOALS
          value:
            - "package"
        - name: MAVEN_BUILD_OPTS
          value:
            - "$(params.MAVEN_BUILD_OPTS)"
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: maven-m2
          workspace: maven-m2
        - name: output
          workspace: shared-workspace
      runAfter:
        - quality-gate-check

    - name: kustomize-build-config
      taskRef:
        name: openshift-kustomize
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "kustomize build $1 | oc apply -f-"
        - name: ARGS
          value:
            - "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd/applications/build"
      runAfter:
        - maven-run

    - name: oc-start-build
      taskRef:
        name: openshift-client
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
        - name: SCRIPT
          value: "oc start-build $1 --from-dir=$(params.APPLICATION_NAME)/$(params.GIT_BRANCH) --follow"
        - name: ARGS
          value:
            - "$(params.APPLICATION_NAME)"
      runAfter:
        - kustomize-build-config

    - name: upload-chart
      retries: 1
      taskRef:
        name: helm-upload-chart
      workspaces:
        - name: output
          workspace: shared-workspace
      params:
      - name: WORK_DIRECTORY
        value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
      runAfter:
        - oc-start-build

    - name: oc-tag-image-dev
      taskRef:
        name: oc-tag-image-from-mvn
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: maven-m2
          workspace: maven-m2
        - name: output
          workspace: shared-workspace
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: BUILD_NAMESPACE
          value: "$(params.BUILD_NAMESPACE)"
        - name: DEPLOY_NAMESPACE
          value: "$(params.DEV_NAMESPACE)"
      runAfter:
        - upload-chart

    - name: oc-tag-image-test
      when:
        - Input: "$(params.GIT_BRANCH)"
          Operator: in
          Values: ["master","trunk","main"]
      taskRef:
        name: oc-tag-image-from-mvn
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: maven-m2
          workspace: maven-m2
        - name: output
          workspace: shared-workspace
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: BUILD_NAMESPACE
          value: "$(params.BUILD_NAMESPACE)"
        - name: DEPLOY_NAMESPACE
          value: "$(params.TEST_NAMESPACE)"
      runAfter:
        - upload-chart

    - name: oc-tag-image-stage
      when:
        - Input: "$(params.GIT_BRANCH)"
          Operator: in
          Values: ["master","trunk","main"]
      taskRef:
        name: oc-tag-image-from-mvn
      workspaces:
        - name: maven-settings
          workspace: maven-settings
        - name: maven-m2
          workspace: maven-m2
        - name: output
          workspace: shared-workspace
      params:
        - name: APPLICATION_NAME
          value: "$(params.APPLICATION_NAME)"
        - name: WORK_DIRECTORY
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
        - name: BUILD_NAMESPACE
          value: "$(params.BUILD_NAMESPACE)"
        - name: DEPLOY_NAMESPACE
          value: "$(params.STAGE_NAMESPACE)"
      runAfter:
        - upload-chart

    - name: helm-install-apps-dev # branches only deploy to dev
      when:
        - Input: "$(params.GIT_BRANCH)"
          Operator: notin
          Values: ["master","trunk","main"]
      taskRef:
        name: helm-install-from-chartrepo
      params:
        - name: helm_repo_name
          value: "nexus"
        - name: helm_repo_url
          value: "http://sonatype-nexus-service:8081/repository/helm-charts/"
        - name: chart_name
          value: "$(params.APPLICATION_NAME)"
        - name: release_name
          value: "$(params.GIT_BRANCH)"
        - name: release_version
          value: "$(params.HELM_CHART_VERSION)"
        - name: release_namespace
          value: "$(params.DEV_NAMESPACE)"
        - name: overwrite_values
          value: "$(HELM_OVERWRITE_VALUES)"
      runAfter:
        - oc-tag-image-dev
        - upload-chart

    - name: git-commit-test
      retries: 3
      taskRef:
        name: git-commit-argo-versions-mvn
      workspaces:
        - name: git-auth-secret
          workspace: git-auth-secret
        - name: maven-settings
          workspace: maven-settings
        - name: maven-m2
          workspace: maven-m2
        - name: output
          workspace: shared-workspace
      params:
      - name: APPLICATION_NAME
        value: "$(params.APPLICATION_NAME)"
      - name: WORK_DIRECTORY
        value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd"
      - name: WORK_DIRECTORY_APP
        value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
      - name: GIT_TAG
        value: "$(params.GIT_REVISION)"
      - name: APP_OF_APPS_KEY
        value: "$(params.APP_OF_APPS_TEST_KEY)"
      - name: ARGOCD_CONFIG_REPO_PATH
        value: "applications/deployment/values-applications-test.yaml"
      runAfter:
      - oc-tag-image-test

    - name: helm-argocd-apps-test
      when:
        - Input: "$(params.GIT_BRANCH)"
          Operator: in
          Values: ["master","trunk","main"]
      taskRef:
        name: helm-install-from-source
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: charts_dir
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd/applications/deployment"
        - name: values_file
          value: argo-app-of-apps-test.yaml
        - name: release_name
          value: "pet-battle-suite-test"
        - name: target_namespace
          value: "$(params.BUILD_NAMESPACE)"
        - name: overwrite_values
          value: "foo=bar"
      runAfter:
        - git-commit-test

    - name: argocd-sync-application-test
      retries: 3
      taskRef:
        name: argocd-sync-and-wait
      workspaces:
      - name: argocd-env-secret
        workspace: argocd-env-secret
      params:
      - name: application-name
        value: "-l app.kubernetes.io/instance=$(params.APPLICATION_NAME)"
      - name: argocd-project
        value: "pet-battle-test"
      - name: flags
        value: --insecure
      - name: revision
        value: "$(params.HELM_CHART_VERSION)"
      runAfter:
      - helm-argocd-apps-test

    - name: git-commit-stage
      retries: 3
      taskRef:
        name: git-commit-argo-versions-mvn
      workspaces:
        - name: git-auth-secret
          workspace: git-auth-secret
        - name: maven-settings
          workspace: maven-settings
        - name: maven-m2
          workspace: maven-m2
        - name: output
          workspace: shared-workspace
      params:
      - name: APPLICATION_NAME
        value: "$(params.APPLICATION_NAME)"
      - name: WORK_DIRECTORY
        value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd"
      - name: WORK_DIRECTORY_APP
        value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)"
      - name: GIT_TAG
        value: "$(params.GIT_REVISION)"
      - name: APP_OF_APPS_KEY
        value: "$(params.APP_OF_APPS_STAGE_KEY)"
      - name: ARGOCD_CONFIG_REPO_PATH
        value: "applications/deployment/values-applications-stage.yaml"
      runAfter:
      - oc-tag-image-stage

    - name: helm-argocd-apps-stage
      when:
        - Input: "$(params.GIT_BRANCH)"
          Operator: in
          Values: ["master","trunk","main"]
      taskRef:
        name: helm-install-from-source
      workspaces:
        - name: source
          workspace: shared-workspace
      params:
        - name: charts_dir
          value: "$(params.APPLICATION_NAME)/$(params.GIT_BRANCH)/cicd/applications/deployment"
        - name: values_file
          value: argo-app-of-apps-stage.yaml
        - name: release_name
          value: "pet-battle-suite-stage"
        - name: target_namespace
          value: "$(params.BUILD_NAMESPACE)"
        - name: overwrite_values
          value: "foo=bar"
      runAfter:
        - git-commit-stage

    - name: argocd-sync-application-stage
      retries: 3
      taskRef:
        name: argocd-sync-and-wait
      workspaces:
      - name: argocd-env-secret
        workspace: argocd-env-secret
      params:
      - name: application-name
        value: "-l app.kubernetes.io/instance=$(params.APPLICATION_NAME)"
      - name: argocd-project
        value: "pet-battle-stage"
      - name: flags
        value: --insecure
      - name: revision
        value: "$(params.HELM_CHART_VERSION)"
      runAfter:
      - helm-argocd-apps-stage
